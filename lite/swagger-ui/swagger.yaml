---
swagger: "2.0"
info:
  version: "1.0.0-alpha"
  description: >-
    A REST interface for state queries, transaction generation and
    broadcast.
  title: IRISLCD Swagger-UI
  termsOfService: 'https://www.irisnet.org'
  contact:
    name: 边界智能
    url: 'https://bianjie.ai/'
    email: service@bianjie.ai
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Transactions
    description: Search, encode, or broadcast transactions.
  - name: Tendermint RPC
    description: Tendermint APIs, such as query blocks, transactions and validatorset
  - name: Auth
    description: Authenticate accounts
  - name: Bank
    description: Create and broadcast transactions
  - name: Staking
    description: Stake module APIs
  - name: Governance
    description: Governance module APIs
  - name: Slashing
    description: Slashing module APIs
  - name: Distribution
    description: Fee distribution module APIs
  - name: IBC
    description: IBC module APIs
  - name: Supply
    description: Supply module APIs
  - name: Asset
    description: Asset module APIs
  - name: Rand
    description: Rand module APIs
  - name: Service
    description: Service module APIs
  - name: CoinSwap
    description: CoinSwap module APIs
  - name: HTLC
    description: HTLC module APIs
  - name: Token
    description: Token module APIs
  - name: NFT
    description: NFT module APIs
  - name: Record
    description: Record module APIs
  - name: Oracle
    description: Oracle module APIs
  - name: version
    description: Query app version
  - name: Mint
    description: Minting module APIs
  - name: Misc
    description: Query app version
  - name: Params
    description: Query system Params
paths:
  /node_info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      tags:
        - Tendermint RPC
      produces:
        - application/json
      responses:
        200:
          description: Node status
          schema:
            type: object
            properties:
              application_version:
                properties:
                  build_tags:
                    type: string
                  client_name:
                    type: string
                  commit:
                    type: string
                  go:
                    type: string
                  name:
                    type: string
                  server_name:
                    type: string
                  version:
                    type: string
              node_info:
                properties:
                  id:
                    type: string
                  moniker:
                    type: string
                    example: validator-name
                  protocol_version:
                    properties:
                      p2p:
                        type: string
                        example: 7
                      block:
                        type: string
                        example: 10
                      app:
                        type: string
                        example: 0
                  network:
                    type: string
                    example: irishub
                  channels:
                    type: string
                  listen_addr:
                    type: string
                    example: 192.168.56.1:26656
                  version:
                    description: Tendermint version
                    type: string
                    example: 0.15.0
                  other:
                    description: more information on versions
                    type: object
                    properties:
                      tx_index:
                        type: string
                        example: on
                      rpc_address:
                        type: string
                        example: tcp://0.0.0.0:26657
        500:
          description: Failed to query node status
  /syncing:
    $ref: cosmos-swagger.yaml#/paths/~1syncing
  /blocks/latest:
    $ref: cosmos-swagger.yaml#/paths/~1blocks~1latest
  /blocks/{height}:
    $ref: cosmos-swagger.yaml#/paths/~1blocks~1{height}
  /validatorsets/latest:
    $ref: cosmos-swagger.yaml#/paths/~1validatorsets~1latest
  /validatorsets/{height}:
    $ref: cosmos-swagger.yaml#/paths/~1validatorsets~1{height}
  /txs/{hash}:
    $ref: cosmos-swagger.yaml#/paths/~1txs~1{hash}
  /txs:
    $ref: cosmos-swagger.yaml#/paths/~1txs
  /txs/encode:
    $ref: cosmos-swagger.yaml#/paths/~1txs~1encode
  /txs/decode:
    $ref: cosmos-swagger.yaml#/paths/~1txs~1decode
  /bank/balances/{address}:
    $ref: cosmos-swagger.yaml#/paths/~1bank~1balances~1{address}
  /bank/accounts/{address}/transfers:
    $ref: cosmos-swagger.yaml#/paths/~1bank~1accounts~1{address}~1transfers
  /auth/accounts/{address}:
    $ref: cosmos-swagger.yaml#/paths/~1auth~1accounts~1{address}
  /staking/delegators/{delegatorAddr}/delegations:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1delegators~1{delegatorAddr}~1delegations
  /staking/delegators/{delegatorAddr}/delegations/{validatorAddr}:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1delegators~1{delegatorAddr}~1delegations~1{validatorAddr}
  /staking/delegators/{delegatorAddr}/unbonding_delegations:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1delegators~1{delegatorAddr}~1unbonding_delegations
  /staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1delegators~1{delegatorAddr}~1unbonding_delegations~1{validatorAddr}
  /staking/redelegations:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1redelegations
  /staking/delegators/{delegatorAddr}/redelegations:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1delegators~1{delegatorAddr}~1redelegations
  /staking/delegators/{delegatorAddr}/validators:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1delegators~1{delegatorAddr}~1validators
  /staking/delegators/{delegatorAddr}/validators/{validatorAddr}:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1delegators~1{delegatorAddr}~1validators~1{validatorAddr}
  /staking/validators:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1validators
  /staking/validators/{validatorAddr}:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1validators~1{validatorAddr}
  /staking/validators/{validatorAddr}/delegations:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1validators~1{validatorAddr}~1delegations
  /staking/validators/{validatorAddr}/unbonding_delegations:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1validators~1{validatorAddr}~1unbonding_delegations
  /staking/pool:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1pool
  /staking/parameters:
    $ref: cosmos-swagger.yaml#/paths/~1staking~1parameters
  # TODO: We need to either fix this route when the validator is not found or add a slashed validator in the contract tests
  #  /slashing/validators/{validatorPubKey}/signing_info:
  #    get:
  #      summary: Get sign info of given validator
  #      description: Get sign info of given validator
  #      produces:
  #        - application/json
  #      tags:
  #        - Slashing
  #      parameters:
  #        - type: string
  #          description: Bech32 validator public key
  #          name: validatorPubKey
  #          required: true
  #          in: path
  #          x-example: fvp1zcjduepq20pzdy56z2k5ccdzz43g8g7vwfw4pzny3mhz6ckc444fj0avamhsazfp09
  #      responses:
  #        200:
  #          description: OK
  #          schema:
  #            $ref: "#/definitions/SigningInfo"
  #        400:
  #          description: Invalid validator public key
  #        500:
  #          description: Internal Server Error
  /slashing/signing_infos:
    $ref: cosmos-swagger.yaml#/paths/~1slashing~1signing_infos
  /slashing/validators/{validatorAddr}/unjail:
    $ref: cosmos-swagger.yaml#/paths/~1slashing~1validators~1{validatorAddr}~1unjail
  /slashing/parameters:
    $ref: cosmos-swagger.yaml#/paths/~1slashing~1parameters
  /gov/proposals:
    $ref: cosmos-swagger.yaml#/paths/~1gov~1proposals
  /gov/proposals/param_change:
    $ref: cosmos-swagger.yaml#/paths/~1gov~1proposals~1param_change
  /gov/proposals/{proposalId}:
    $ref: cosmos-swagger.yaml#/paths/~1gov~1proposals~1{proposalId}
  /gov/proposals/{proposalId}/proposer:
    $ref: cosmos-swagger.yaml#/paths/~1gov~1proposals~1{proposalId}~1proposer
  /gov/proposals/{proposalId}/deposits:
    $ref: cosmos-swagger.yaml#/paths/~1gov~1proposals~1{proposalId}~1deposits
  /gov/proposals/{proposalId}/deposits/{depositor}:
    $ref: cosmos-swagger.yaml#/paths/~1gov~1proposals~1{proposalId}~1deposits~1{depositor}
  /gov/proposals/{proposalId}/votes:
    $ref: cosmos-swagger.yaml#/paths/~1gov~1proposals~1{proposalId}~1votes
  /gov/proposals/{proposalId}/votes/{voter}:
    $ref: cosmos-swagger.yaml#/paths/~1gov~1proposals~1{proposalId}~1votes~1{voter}
  /gov/proposals/{proposalId}/tally:
    $ref: cosmos-swagger.yaml#/paths/~1gov~1proposals~1{proposalId}~1tally
  /gov/parameters/deposit:
    $ref: cosmos-swagger.yaml#/paths/~1gov~1parameters~1deposit
  /gov/parameters/tallying:
    $ref: cosmos-swagger.yaml#/paths/~1gov~1parameters~1tallying
  /gov/parameters/voting:
    $ref: cosmos-swagger.yaml#/paths/~1gov~1parameters~1voting
  /distribution/delegators/{delegatorAddr}/rewards:
    $ref: cosmos-swagger.yaml#/paths/~1distribution~1delegators~1{delegatorAddr}~1rewards
  /distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}:
    $ref: cosmos-swagger.yaml#/paths/~1distribution~1delegators~1{delegatorAddr}~1rewards~1{validatorAddr}
  /distribution/delegators/{delegatorAddr}/withdraw_address:
    $ref: cosmos-swagger.yaml#/paths/~1distribution~1delegators~1{delegatorAddr}~1withdraw_address
  /distribution/validators/{validatorAddr}:
    $ref: cosmos-swagger.yaml#/paths/~1distribution~1validators~1{validatorAddr}
  /distribution/validators/{validatorAddr}/outstanding_rewards:
    $ref: cosmos-swagger.yaml#/paths/~1distribution~1validators~1{validatorAddr}~1outstanding_rewards
  /distribution/validators/{validatorAddr}/rewards:
    $ref: cosmos-swagger.yaml#/paths/~1distribution~1validators~1{validatorAddr}~1rewards
  /distribution/community_pool:
    $ref: cosmos-swagger.yaml#/paths/~1distribution~1community_pool
  /distribution/parameters:
    $ref: cosmos-swagger.yaml#/paths/~1distribution~1parameters
  /supply/total:
    $ref: cosmos-swagger.yaml#/paths/~1supply~1total
  /supply/total/{denomination}:
    $ref: cosmos-swagger.yaml#/paths/~1supply~1total~1{denomination}
    
  '/mint/parameters':
    get:
      summary: Query the current mint parameter values
      tags:
        - Mint
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            properties:
              mint_denom:
                type: string
              inflation:
                type: string
        500:
          description: Internal Server Error
  '/token/tokens':
    post:
      summary: Issue a token
      tags:
        - Token
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: token
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              owner:
                $ref: '#/definitions/Address'
              name:
                type: string
                example: 'Hello Kitty'
              symbol:
                type: string
                example: 'cat'
              min_unit:
                type: string
                example: 'min'
              initial_supply:
                type: string
                example: '1000000000'
              max_supply:
                type: string
                example: '2000000000'
              scale:
                type: integer
                example: 18
              mintable:
                type: boolean
                example: true
      responses:
        200:
          description: Unsigned tx was succesfully generated
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
    get:
      summary: Query tokens by owner
      tags:
        - Token
      parameters:
        - in: query
          name: owner
          description: the owner address
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/Token'
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/token/tokens/{symbol}':
    get:
      summary: Query a token by symbol
      tags:
        - Token
      parameters:
        - in: path
          name: symbol
          description: symbol of the token
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/Token'
        400:
          description: Invalid symbol
        500:
          description: Internal Server Error
    put:
      summary: Edit an existing token
      parameters:
        - in: path
          name: symbol
          description: symbol of the token
          required: true
          schema:
            type: string
        - in: body
          name: token
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              owner:
                $ref: '#/definitions/Address'
              max_supply:
                type: string
                example: '21000000'
              mintable:
                type: string
                example: ""
              name:
                type: string
                example: 'BTC Token'
      tags:
        - Token
      responses:
        200:
          description: Unsigned tx was succesfully generated
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/token/tokens/{symbol}/mint':
    post:
      summary: Mint tokens to a specified address
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: symbol of the token
          required: true
          schema:
            type: string
        - in: body
          name: token
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              owner:
                $ref: '#/definitions/Address'
              to:
                $ref: '#/definitions/Address'
              amount:
                type: string
                example: '21000000'
      tags:
        - Token
      responses:
        200:
          description: Unsigned tx was succesfully generated
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/token/tokens/{symbol}/transfer':
    post:
      summary: Transfer the ownership of the token to a new owner
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: symbol of the token
          required: true
          schema:
            type: string
        - in: body
          name: transfer
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              src_owner:
                $ref: '#/definitions/Address'
              dst_owner:
                $ref: '#/definitions/Address'
      tags:
        - Token
      responses:
        200:
          description: Unsigned tx was succesfully generated
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/token/tokens/{symbol}/fee':
    get:
      summary: Query the fees for issuing and minting the token with the given symbol
      tags:
        - Token
      parameters:
        - in: path
          name: symbol
          description: the token symbol
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/TokenFeesOutput'
        400:
          description: Invalid symbol
        500:
          description: Internal Server Error
  '/token/tokens/params':
    get:
      summary: Query the params for issuing and minting the token with the given symbol
      tags:
        - Token
      parameters:
        - in: path
          name: symbol
          description: the token symbol
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/TokenFeesOutput'
        400:
          description: Invalid symbol
        500:
          description: Internal Server Error
  '/nft/nfts/mint':
    post:
      summary: Mint an NFT to a specified address
      tags:
        - NFT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: MintNFTReq
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              owner:
                $ref: '#/definitions/Address'
                example: 'caa12jyx7smkhpzgjudh73gxmcgt9chxtpeufsq2cj'
              recipient:
                $ref: '#/definitions/Address'
                example: 'caa12jyx7smkhpzgjudh73gxmcgt9chxtpeufsq2cj'
              token_id:
                type: string
              token_uri:
                type: string
              denom:
                type: string
              token_data:
                type: string
      responses:
        200:
          description: Unsigned tx was succesfully generated
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  "/nft/nfts/denoms/issue":
    post:
      summary: Mint an NFT to a specified address
      tags:
        - NFT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: MintNFTReq
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              owner:
                $ref: '#/definitions/Address'
                example: 'caa12jyx7smkhpzgjudh73gxmcgt9chxtpeufsq2cj'
              denom:
                type: string
              schema:
                type: string
      responses:
        200:
          description: Unsigned tx was succesfully generated
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/nft/nfts/{denom}/{token-id}':
    get:
      summary: Query an NFT by the denom and ID
      tags:
        - NFT
      parameters:
        - in: path
          name: denom
          description: denom of the NFT
          required: true
          schema:
            type: string
        - in: path
          name: token-id
          description: ID of the NFT
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/NFT'
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
    put:
      summary: Edit an NFT of the specified denom and ID
      tags:
        - NFT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: denom of the NFT
          required: true
          schema:
            type: string
        - in: path
          name: token-id
          description: ID of the NFT
          required: true
          schema:
            type: string
        - in: body
          name: EditNFTReq
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              owner:
                $ref: '#/definitions/Address'
                example: 'caa12jyx7smkhpzgjudh73gxmcgt9chxtpeufsq2cj'
              token_uri:
                type: string
              token_data:
                type: string
      responses:
        200:
          description: Unsigned tx was succesfully generated
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/nft/nfts/{denom}/{token-id}/transfer':
    post:
      summary: Transfer the ownership of an NFT of the specified denom and ID
      tags:
        - NFT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: denom of the NFT
          required: true
          schema:
            type: string
        - in: path
          name: token-id
          description: ID of the NFT
          required: true
          schema:
            type: string
        - in: body
          name: TransferNFTReq
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              owner:
                $ref: '#/definitions/Address'
                example: 'caa12jyx7smkhpzgjudh73gxmcgt9chxtpeufsq2cj'
              recipient:
                $ref: '#/definitions/Address'
                example: 'caa12jyx7smkhpzgjudh73gxmcgt9chxtpeufsq2cj'
              token_uri:
                type: string
              token_data:
                type: string
      responses:
        200:
          description: Unsigned tx was succesfully generated
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/nft/nfts/{denom}/{token-id}/burn':
    post:
      summary: Burn an NFT of the specified denom and ID
      tags:
        - NFT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: denom
          description: denom of the NFT
          required: true
          schema:
            type: string
        - in: path
          name: token-id
          description: ID of the NFT
          required: true
          schema:
            type: string
        - in: body
          name: BurnNFTReq
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              owner:
                $ref: '#/definitions/Address'
                example: 'caa12jyx7smkhpzgjudh73gxmcgt9chxtpeufsq2cj'
      responses:
        200:
          description: Unsigned tx was succesfully generated
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/nft/nfts/collections/{denom}':
    get:
      summary: Query the NFT collection of the specified denom
      tags:
        - NFT
      parameters:
        - in: path
          name: denom
          description: denom of the collection
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/nft/nfts/owners/{address}':
    get:
      summary: Query the collections of NFTs owned by an address
      tags:
        - NFT
      parameters:
        - in: path
          name: address
          description: owner address
          required: true
          schema:
            type: string
        - in: query
          name: denom
          description: optional denom
          required: false
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/NFTOwner'
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/nft/nfts/denoms':
    get:
      summary: Query all existing denoms
      tags:
        - NFT
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/nft/nfts/supplies/{denom}':
    get:
      summary: Query the supply of NFTs of the specified denom
      tags:
        - NFT
      parameters:
        - in: path
          name: denom
          description: denom of NFTs
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: integer
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/nft/nfts/denom/{denom}':
    get:
      summary: Query a denom
      tags:
        - NFT
      parameters:
        - in: path
          name: denom
          description: denom of NFTs
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/Denom'
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/record/records':
    post:
      summary: Create a record
      tags:
        - Record
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: record
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              contents:
                type: array
                items:
                  type: object
                  properties:
                    digest:
                      type: string
                    digest_algo:
                      type: string
                      example: 'SHA256'
                    uri:
                      type: string
                    meta:
                      type: string
              creator:
                $ref: '#/definitions/Address'
      responses:
        200:
          description: Unsigned tx was succesfully generated
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/record/records/{record-id}':
    get:
      summary: Query a record by id
      tags:
        - Record
      parameters:
        - in: path
          name: record-id
          description: id of the record
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tx_hash:
                    type: string
                  contents:
                    type: array
                    items:
                      type: object
                      properties:
                        digest:
                          type: string
                        digest_algo:
                          type: string
                          example: 'SHA256'
                        uri:
                          type: string
                        meta:
                          type: string
                  creator:
                    $ref: '#/definitions/Address'
        400:
          description: Invalid symbol
        500:
          description: Internal Server Error
  /service/definitions:
    post:
      summary: Add a service definition
      description: Send transaction to define a service
      tags:
        - Service
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service define body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                service_name:
                  type: string
                service_description:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                idl_content:
                  type: string
                author_addr:
                  $ref: '#/definitions/Address'
                author_description:
                  type: string
        required: true
  '/service/definitions/{defChainId}/{serviceName}':
    parameters:
      - in: path
        name: defChainId
        description: service defined chain id
        required: true
        schema:
          type: string
      - in: path
        name: serviceName
        description: service name
        required: true
        schema:
          type: string
    get:
      summary: Query service definition
      description: Query a service definition
      tags:
        - Service
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  definition:
                    type: object
                    properties:
                      name:
                        type: string
                      chain_id:
                        type: string
                      description:
                        type: string
                      tags:
                        type: array
                        items:
                          type: string
                      author:
                        type: string
                      author_description:
                        type: string
                      idl_content:
                        type: string
                  methods:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        output_privacy:
                          type: string
                        output_cached:
                          type: string
        '204':
          description: No service definition
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /service/bindings:
    post:
      summary: Add a service binding
      description: Send transaction to add a binding to a service definition
      tags:
        - Service
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service bind body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                def_chain_id:
                  type: string
                service_name:
                  type: string
                binding_type:
                  type: string
                deposit:
                  type: string
                  example: 1iris
                prices:
                  type: array
                  items:
                    type: string
                    example: 1iris
                level:
                  type: object
                  properties:
                    avg_rsp_time:
                      type: string
                    usable_time:
                      type: string
                provider:
                  $ref: '#/definitions/Address'
        required: true
  '/service/bindings/{defChainId}/{serviceName}/{bindChainId}/{provider}':
    parameters:
      - in: path
        name: defChainId
        description: service defined chain id
        required: true
        schema:
          type: string
      - in: path
        name: serviceName
        description: service name
        required: true
        schema:
          type: string
      - in: path
        name: bindChainId
        description: service bound chain id
        required: true
        schema:
          type: string
      - in: path
        name: provider
        description: service provider address
        required: true
        schema:
          type: string
    get:
      summary: Query service binding
      description: Query a service binding
      tags:
        - Service
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  type:
                    type: string
                  value:
                    type: object
                    properties:
                      def_name:
                        type: string
                      def_chain_id:
                        type: string
                      bind_chain_id:
                        type: string
                      provider:
                        type: string
                      binding_type:
                        type: string
                      deposit:
                        type: string
                        example: 1iris
                      prices:
                        type: array
                        items:
                          type: string
                          example: 1iris
                      level:
                        type: object
                        properties:
                          avg_rsp_time:
                            type: integer
                          usable_time:
                            type: integer
                      available:
                        type: boolean
                      disable_time:
                        type: string
        '204':
          description: No service binding
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/service/bindings/{defChainId}/{serviceName}':
    parameters:
      - in: path
        name: defChainId
        description: service defined chain id
        required: true
        schema:
          type: string
      - in: path
        name: serviceName
        description: service name
        required: true
        schema:
          type: string
    get:
      summary: Query service binding list
      description: Query service binding list
      tags:
        - Service
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  properties:
                    type:
                      type: string
                    value:
                      type: object
                      properties:
                        def_name:
                          type: string
                        def_chain_id:
                          type: string
                        bind_chain_id:
                          type: string
                        provider:
                          type: string
                        binding_type:
                          type: string
                        deposit:
                          type: string
                          example: 1iris
                        prices:
                          type: array
                          items:
                            type: string
                            example: 1iris
                        level:
                          type: object
                          properties:
                            avg_rsp_time:
                              type: integer
                            usable_time:
                              type: integer
                        available:
                          type: boolean
                        disable_time:
                          type: string
        '204':
          description: No service binding
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/service/bindings/{defChainId}/{serviceName}/{provider}':
    put:
      summary: Update a service binding
      description: Send transaction to update a service binding
      tags:
        - Service
      parameters:
        - in: path
          name: defChainId
          description: service defined chain id
          required: true
          schema:
            type: string
        - in: path
          name: serviceName
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: service provider address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service binding update body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                def_chain_id:
                  type: string
                service_name:
                  type: string
                binding_type:
                  type: string
                deposit:
                  type: string
                  example: 1iris
                prices:
                  type: array
                  items:
                    type: string
                    example: 1iris
                level:
                  type: object
                  properties:
                    avg_rsp_time:
                      type: integer
                    usable_time:
                      type: integer
        required: true
  '/service/bindings/{defChainId}/{serviceName}/{provider}/disable':
    put:
      summary: Disable service binding
      description: Send transaction to diasble a service binding
      tags:
        - Service
      parameters:
        - in: path
          name: defChainId
          description: service defined chain id
          required: true
          schema:
            type: string
        - in: path
          name: serviceName
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: service provider address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service binding disable body
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Unjailbody'
  '/service/bindings/{defChainId}/{serviceName}/{provider}/enable':
    put:
      summary: Enable service binding
      description: Send transaction to enable a service binding
      tags:
        - Service
      parameters:
        - in: path
          name: defChainId
          description: service defined chain id
          required: true
          schema:
            type: string
        - in: path
          name: serviceName
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: service provider address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service binding enable body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                deposit:
                  type: string
                  example: 1iris
        required: true
  '/service/bindings/{defChainId}/{serviceName}/{provider}/deposit/refund':
    put:
      summary: Refund deposit from a service binding
      description: Send transaction to refund deposit from a service binding
      tags:
        - Service
      parameters:
        - in: path
          name: defChainId
          description: service defined chain id
          required: true
          schema:
            type: string
        - in: path
          name: serviceName
          description: service name
          required: true
          schema:
            type: string
        - in: path
          name: provider
          description: service provider address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service binding deposit refund body
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Unjailbody'
  /service/requests:
    post:
      summary: Call service
      description: Send transaction to call a method of service which a provider bound it
      tags:
        - Service
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service request body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                requests:
                  type: array
                  items:
                    properties:
                      def_chain_id:
                        type: string
                      service_name:
                        type: string
                      bind_chain_id:
                        type: string
                      method_id:
                        type: integer
                      service_fee:
                        type: string
                        example: 1iris
                      data:
                        type: string
                      provider:
                        $ref: '#/definitions/Address'
                      consumer:
                        $ref: '#/definitions/Address'
        required: true
  '/service/requests/{defChainId}/{serviceName}/{bindChainId}/{provider}':
    parameters:
      - in: path
        name: defChainId
        description: service defined chain id
        required: true
        schema:
          type: string
      - in: path
        name: serviceName
        description: service name
        required: true
        schema:
          type: string
      - in: path
        name: bindChainId
        description: service bound chain id
        required: true
        schema:
          type: string
      - in: path
        name: provider
        description: service provider address
        required: true
        schema:
          type: string
    get:
      summary: Query service requests of a provider
      description: Query service requests of a provider
      tags:
        - Service
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  properties:
                    def_chain_id:
                      type: string
                    def_name:
                      type: string
                    bind_chain_id:
                      type: string
                    req_chain_id:
                      type: string
                    method_id:
                      type: integer
                    provider:
                      $ref: '#/definitions/Address'
                    consumer:
                      $ref: '#/definitions/Address'
                    input:
                      type: string
                    service_fee:
                      type: array
                      items:
                        $ref: '#/definitions/Coin'
                    profiling:
                      type: boolean
                    request_height:
                      type: number
                    request_intra_tx_counter:
                      type: number
                    expiration_height:
                      type: number
        '204':
          description: No service request
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /service/responses:
    post:
      summary: Respond service call
      description: Send transaction to respond a service call
      tags:
        - Service
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service response body
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                req_chain_id:
                  type: string
                request_id:
                  type: string
                data:
                  type: string
                provider:
                  $ref: '#/definitions/Address'
                error_msg:
                  type: string
        required: true
  '/service/responses/{reqChainId}/{reqId}':
    parameters:
      - in: path
        name: reqChainId
        description: service request chain id
        required: true
        schema:
          type: string
      - in: path
        name: reqId
        description: request id
        required: true
        schema:
          type: string
    get:
      summary: Query service response
      description: Query service response
      tags:
        - Service
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  type:
                    type: string
                  value:
                    type: object
                    properties:
                      req_chain_id:
                        type: string
                      request_height:
                        type: integer
                      request_intra_tx_counter:
                        type: integer
                      expiration_height:
                        type: integer
                      provider:
                        $ref: '#/definitions/Address'
                      consumer:
                        $ref: '#/definitions/Address'
                      output:
                        type: string
                      error_msg:
                        type: string
        '204':
          description: No service request
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/service/fees/{address}':
    parameters:
      - in: path
        name: address
        description: account address
        required: true
        schema:
          type: string
    get:
      summary: Query service fees of an address
      description: Query service fees of an address
      tags:
        - Service
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                properties:
                  returned_fee:
                    type: array
                    items:
                      $ref: '#/definitions/Coin'
                  incoming_fee:
                    type: array
                    items:
                      $ref: '#/definitions/Coin'
        '204':
          description: No service request
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  '/service/fees/{address}/refund':
    post:
      summary: Refund service return fee of consumer
      description: Send transaction to refund service return fee of consumer
      tags:
        - Service
      parameters:
        - in: path
          name: address
          description: address of consumer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service fees refund body
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Unjailbody'
  '/service/fees/{address}/withdraw':
    post:
      summary: Withdraw service incoming fee of provider
      description: Send transaction to withdraw service incoming fee of provider
      tags:
        - Service
      parameters:
        - in: path
          name: address
          description: address of provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service fees withdraw body
        '500':
          description: Internal Server Error
      requestBody:
        $ref: '#/components/requestBodies/Unjailbody'
  '/asset/tokens':
    post:
      summary: Issue a token
      tags:
        - Asset
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                owner:
                  $ref: '#/definitions/Address'
                family:
                  type: string
                  example: 'fungible'
                source:
                  type: string
                  example: 'native'
                gateway:
                  type: string
                  example: ''
                name:
                  type: string
                  example: 'Hello Kitty'
                symbol:
                  type: string
                  example: 'cat'
                canonical_symbol:
                  type: string
                  example: ''
                min_unit_alias:
                  type: string
                  example: 'kitty'
                initial_supply:
                  type: string
                  example: '1000000000'
                max_supply:
                  type: string
                  example: '2000000000'
                decimal:
                  type: integer
                  example: 18
                mintable:
                  type: boolean
                  example: true
        required: true
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
    get:
      summary: Query tokens by condition
      tags:
        - Asset
      parameters:
        - in: query
          name: source
          description: 'the source of the destination token, options: native, external, gateway'
          required: false
          schema:
            type: string
        - in: query
          name: owner
          description: 'the owner address of the destination token, optional when source is native, ignored when source is not native'
          required: false
          schema:
            type: string
        - in: query
          name: gateway
          description: 'the gateway moniker of the destination token, optional when source is gateway'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/Token'
        '400':
          description: Invalid token id
        '500':
          description: Internal Server Error
  '/asset/tokens/{id}':
    get:
      summary: Query token by unique id
      tags:
        - Asset
      parameters:
        - in: path
          name: id
          description: the unique id of the token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/Token'
        '400':
          description: Invalid token id
        '500':
          description: Internal Server Error
    put:
      summary: Edit token information
      parameters:
        - in: path
          name: id
          description: unique id of token
          required: true
          schema:
            type: string
      tags:
        - Asset
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                owner:
                  $ref: '#/definitions/Address'
                canonical_symbol:
                  type: string
                  example: 'btc'
                min_unit_alias:
                  type: string
                  example: 'satoshi'
                max_supply:
                  type: int
                  example: '21000000'
                mintable:
                  type: string
                  example: ""
                name:
                  type: string
                  example: 'BTC Token'
  '/asset/tokens/{id}/mint':
    post:
      summary: The asset owner and operator can directly mint tokens to a specified address
      parameters:
        - in: path
          name: id
          description: unique id of token
          required: true
          schema:
            type: string
      tags:
        - Asset
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                owner:
                  $ref: '#/definitions/Address'
                to:
                  $ref: '#/definitions/Address'
                amount:
                  type: int
                  example: '21000000'
  '/asset/tokens/{id}/transfer-owner':
    post:
      summary: Transfer token to a new owner
      parameters:
        - in: path
          name: id
          description: unique id of token
          required: true
          schema:
            type: string
      tags:
        - Asset
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                src_owner:
                  $ref: '#/definitions/Address'
                dst_owner:
                  $ref: '#/definitions/Address'
  '/asset/fees/tokens/{id}':
    get:
      summary: Query the fees for the issuance and minting of the token with the given id
      tags:
        - Asset
      parameters:
        - in: path
          name: id
          description: the token id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  exist:
                    type: boolean
                  issue_fee:
                    $ref: '#/definitions/Coin'
                  mint_fee:
                    $ref: '#/definitions/Coin'
        '400':
          description: Invalid id
        '500':
          description: Internal Server Error
  '/rand/rands':
    post:
      summary: Request a random number
      tags:
        - Rand
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                consumer:
                  $ref: '#/definitions/Address'
                block_interval:
                  type: integer
                  example: '10'
  '/rand/rands/{request-id}':
    get:
      summary: Query a random number by the specified request id
      tags:
        - Rand
      parameters:
        - in: path
          name: request-id
          description: the request id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_tx_hash:
                    type: string
                  height:
                    type: integer
                  value:
                    type: string
        '400':
          description: Invalid request id
        '500':
          description: Internal Server Error
  '/rand/queue':
    get:
      summary: Query the pending requests with an optional height
      tags:
        - Rand
      parameters:
        - in: query
          name: height
          description: the destination block height
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    height:
                      type: integer
                    consumer:
                      $ref: '#/definitions/Address'
                    tx_hash:
                      type: string
        '400':
          description: Invalid height if provided
        '500':
          description: Internal Server Error
  '/coinswap/liquidities/{id}':
    get:
      summary: Query liquidity by token id
      tags:
        - CoinSwap
      parameters:
        - in: path
          name: id
          description: the unique liquidity id of the token-iris pair
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/CoinSwapLiquidity'
        '400':
          description: Invalid Liquidity Id
        '500':
          description: Internal Server Error
  '/coinswap/liquidities/{id}/deposit':
    post:
      summary: Add liquidity by exact iris amount, calculated token and liquidity amount
      tags:
        - CoinSwap
      parameters:
        - in: path
          name: id
          description: the unique liquidity id of the token-iris pair
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                max_token:
                  type: integer
                  example: '10'
                exact_iris_amt:
                  type: integer
                  example: '10000000000000000000'
                min_liquidity:
                  type: integer
                  example: '10000000000000000000'
                deadline:
                  type: string
                  example: '30s'
                sender:
                  $ref: '#/definitions/Address'
  '/coinswap/liquidities/{id}/withdraw':
    post:
      summary: Remove liquidity by exact liquidity amount, calculated iris and token amount
      tags:
        - CoinSwap
      parameters:
        - in: path
          name: id
          description: the unique liquidity id of the token-iris pair
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                min_token:
                  type: integer
                  example: '100'
                min_iris_amt:
                  type: integer
                  example: '10000000000000000000'
                withdraw_liquidity:
                  type: integer
                  example: '10000000000000000000'
                deadline:
                  type: string
                  example: '30s'
                sender:
                  $ref: '#/definitions/Address'
  '/coinswap/liquidities/buy':
    post:
      summary: Swap coin by exact output, calculated input
      tags:
        - CoinSwap
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                input:
                  $ref: '#/definitions/CoinSwapInputOutput'
                output:
                  $ref: '#/definitions/CoinSwapInputOutput'
                deadline:
                  type: string
                  example: '30s'
  '/coinswap/liquidities/sell':
    post:
      summary: Swap coin by exact input, calculated output
      tags:
        - CoinSwap
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                input:
                  $ref: '#/definitions/CoinSwapInputOutput'
                output:
                  $ref: '#/definitions/CoinSwapInputOutput'
                deadline:
                  type: string
                  example: '30s'
  '/htlc/htlcs':
    post:
      summary: create an HTLC
      tags:
        - HTLC
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                sender:
                  $ref: '#/definitions/Address'
                to:
                  $ref: '#/definitions/Address'
                receiver_on_other_chain:
                  type: string
                  example: '0xcd2a3d9f938e13cd947ec05abc7fe734df8dd826'
                hash_lock:
                  type: string
                  example: '327a66212cbee3756816e617b38f9dfe327a66212cbee3756816e617b38f9dfe'
                amount:
                  type: array
                  items:
                    $ref: '#/definitions/Coin'
                time_lock:
                  type: integer
                  example: '100'
                timestamp:
                  type: integer
                  example: '1568011909'
  '/htlc/htlcs/{hash-lock}':
    get:
      summary: query HTLC by hash-lock
      tags:
        - HTLC
      parameters:
        - in: path
          name: hash-lock
          description: the hash-lock of the HTLC
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
  '/htlc/htlcs/{hash-lock}/claim':
    post:
      summary: claim an opened HTLC
      tags:
        - HTLC
      parameters:
        - in: path
          name: hash-lock
          description: the hash-lock of the HTLC
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                sender:
                  $ref: '#/definitions/Address'
                secret:
                  type: string
                  example: '5f5f5f6162636465666768696a6b6c6d6e6f707172737475767778797a5f5f5f'
  '/htlc/htlcs/{hash-lock}/refund':
    post:
      summary: refund from an expired HTLC
      tags:
        - HTLC
      parameters:
        - in: path
          name: hash-lock
          description: the hash-lock of the HTLC
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                sender:
                  $ref: '#/definitions/Address'
  '/params':
    get:
      summary: Get the system params with an optional module
      tags:
        - Params
      parameters:
        - in: query
          name: module
          description: the name of the module,options:stake/mint/distr/slashing/service/asset/auth
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
  '/oracle/feeds/{feed-name}':
    put:
      summary: Edit a feed
      description: Send transaction to edit a feed
      tags:
        - Oracle
      parameters:
        - in: path
          name: feed-name
          description: feed name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid service binding deposit refund body
        '500':
          description: Internal Server Error 
    get:
      summary: Query a feed definition
      tags:
        - Oracle
      parameters:
        - in: path
          name: feed-name
          description: feed name
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/definitions/Feed'
        400:
          description: Invalid symbol
        500:
          description: Internal Server Error
  '/oracle/feeds':
    post:
      summary: Define a feed
      tags:
        - Oracle
      responses:
        '200':
          description: Unsigned tx was succesfully generated
        '400':
          description: Invalid parameters
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                base_req:
                  $ref: '#/definitions/BaseReq'
                feed_name:
                  type: string
                aggregate_func:
                  type: string
                value_json_path:
                  type: string
                latest_history:
                  type: string
                description:
                  type: string
                creator:
                  type: string
                service_name:
                  type: string
                providers:
                  type: array
                  items:
                    type: string
                input:
                  type: string
                timeout:
                  type: integer
                service_fee_cap:
                  type: string
                repeated_frequency:
                  type: integer
                response_threshold:
                  type: integer
    get:
      summary: Guery a feed list by condition
      tags:
        - Oracle
      parameters:
        - in: query
          name: state
          description: the state of '/oracle/feeds'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
  '/oracle/feeds/{feed-name}/values':
    get:
      summary: Guery a feed list by feedname
      tags:
        - Oracle
      parameters:
        - in: path
          name: feed-name
          description: the name of feeds
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '500':
          description: Internal Server Error
  '/oracle/feeds/{feed-name}/start':
    post:
      summary: Start a feed
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: feed-name
          description: the name of feeds
          required: true
          schema:
            type: string
        - in: body
          name: ReadRESTReq
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              creator:
                $ref: '#/definitions/Address'
      tags:
        - Oracle
      responses:
        200:
          description: Unsigned tx was succesfully generated
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  '/oracle/feeds/{feed-name}/pause':
    post:
      summary: Pause a feed
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: feed-name
          description: the name of feeds
          required: true
          schema:
            type: string
        - in: body
          name: pauseFeedReq
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: '#/definitions/BaseReq'
              creator:
                $ref: '#/definitions/Address'
      tags:
        - Oracle
      responses:
        200:
          description: Unsigned tx was succesfully generated
        400:
          description: Invalid parameters
        500:
          description: Internal Server Error
  

definitions:
  CheckTxResult:
    $ref: cosmos-swagger.yaml#/definitions/CheckTxResult
  DeliverTxResult:
    $ref: cosmos-swagger.yaml#/definitions/DeliverTxResult
  BroadcastTxCommitResult:
    $ref: cosmos-swagger.yaml#/definitions/BroadcastTxCommitResult
  KVPair:
    $ref: cosmos-swagger.yaml#/definitions/KVPair
  Msg:
    $ref: cosmos-swagger.yaml#/definitions/Msg
  Address:
    $ref: cosmos-swagger.yaml#/definitions/Address
  ValidatorAddress:
    $ref: cosmos-swagger.yaml#/definitions/ValidatorAddress
  Coin:
    $ref: cosmos-swagger.yaml#/definitions/Coin
  Hash:
    $ref: cosmos-swagger.yaml#/definitions/Hash
  TxQuery:
    $ref: cosmos-swagger.yaml#/definitions/TxQuery
  PaginatedQueryTxs:
    $ref: cosmos-swagger.yaml#/definitions/PaginatedQueryTxs
  StdTx:
    $ref: cosmos-swagger.yaml#/definitions/StdTx
  BlockID:
    $ref: cosmos-swagger.yaml#/definitions/BlockID
  BlockHeader:
    $ref: cosmos-swagger.yaml#/definitions/BlockHeader
  Block:
    $ref: cosmos-swagger.yaml#/definitions/Block
  BlockQuery:
    $ref: cosmos-swagger.yaml#/definitions/BlockQuery
  DelegationDelegatorReward:
    $ref: cosmos-swagger.yaml#/definitions/DelegationDelegatorReward
  DelegatorTotalRewards:
    $ref: cosmos-swagger.yaml#/definitions/DelegatorTotalRewards
  BaseReq:
    $ref: cosmos-swagger.yaml#/definitions/BaseReq
  TendermintValidator:
    $ref: cosmos-swagger.yaml#/definitions/TendermintValidator
  TextProposal:
    $ref: cosmos-swagger.yaml#/definitions/TextProposal
  Proposer:
    $ref: cosmos-swagger.yaml#/definitions/Proposer
  Deposit:
    $ref: cosmos-swagger.yaml#/definitions/Deposit
  TallyResult:
    $ref: cosmos-swagger.yaml#/definitions/TallyResult
  Vote:
    $ref: cosmos-swagger.yaml#/definitions/Vote
  Validator:
    $ref: cosmos-swagger.yaml#/definitions/Validator
  Delegation:
    $ref: cosmos-swagger.yaml#/definitions/Delegation
  UnbondingDelegationPair:
    $ref: cosmos-swagger.yaml#/definitions/UnbondingDelegationPair
  UnbondingEntries:
    $ref: cosmos-swagger.yaml#/definitions/UnbondingEntries
  UnbondingDelegation:
    $ref: cosmos-swagger.yaml#/definitions/UnbondingDelegation
  Redelegation:
    $ref: cosmos-swagger.yaml#/definitions/Redelegation
  RedelegationEntry:
    $ref: cosmos-swagger.yaml#/definitions/RedelegationEntry
  ValidatorDistInfo:
    $ref: cosmos-swagger.yaml#/definitions/ValidatorDistInfo
  PublicKey:
    $ref: cosmos-swagger.yaml#/definitions/PublicKey
  SigningInfo:
    $ref: cosmos-swagger.yaml#/definitions/SigningInfo
  ParamChange:
    $ref: cosmos-swagger.yaml#/definitions/ParamChange
  Supply:
    $ref: cosmos-swagger.yaml#/definitions/Supply


  Token:
    type: object
    properties:
      symbol:
        type: string
      name:
        type: string
      min_unit:
        type: string
      scale:
        type: integer
      initial_supply:
        type: string
      max_supply:
        type: string
      mintable:
        type: boolean
      owner:
        $ref: '#/definitions/Address'
  TokenFeesOutput:
    type: object
    properties:
      exist:
        type: boolean
      issue_fee:
        $ref: '#/definitions/Coin'
      mint_fee:
        $ref: '#/definitions/Coin'
  TokenParamsOutput:
    type: object
    properties:
      token_tax_rate:
        $ref: '#definitions/Dec'
      issue_token_base_fee:
        $ref: '#/definitions/Coin'
      min_token_fee_ratio: 
        $ref: '#definitions/Dec'
  Dec:
    type: object
    properties:
      i:
        type: string
  NFT:
    type: object
    properties:
      id:
        type: string
      owner:
        $ref: '#/definitions/Address'
      token_uri:
        type: string
  IDCollection:
    type: object
    properties:
      denom:
        type: string
      IDs:
        type: array
        items:
          type: string
  NFTOwner:
    type: object
    properties:
      address:
        $ref: '#/definitions/Address'
      id_collections:
        type: array
        items:
          $ref: '#/definitions/IDCollection'
  Denom:
    type: object
    properties:
      name:
        type: string
      schema: 
        type: string
      creator: 
        $ref: '#/definitions/Address'
  Feed: 
    type: object
    properties:
      feed-name:
        type: string
      description:
        type: string 
      aggregate_func:
        type: string
      value_json_path:
        type: string 
      latest_history:
        type: integer
      request_context_id:
        type: string
      creator:
        $ref: '#/definitions/Address'

      
      
